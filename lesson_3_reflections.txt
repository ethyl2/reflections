When would you want to use a remote repository rather than keeping all your work
local?

    The main reason, I think, is to be able to share your repository! Also,
    it never hurts to have a backup of your work in case something happens
    to your local files.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    I guess you might want to try things out with a file locally that you don't
    necessarily want updated with whatever is in your GitHub repository.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Clones are created by making copies of a repository from a local location to
    another local location, or from GitHub to a local location. Forks, however,
    are when you request GitHub to clone the project and register it under your
    username on Github, not a local location. "GitHub also keeps track of the
    relationship between the two repositories, so you can visualize the commits
    and pulls between the two projects (and other forks)."
    (https://stackoverflow.com/questions/7057194/
    what-is-the-difference-between-forking-and-cloning-on-github)
    You can create branches within a repository.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    You can update just the local copy of the remote branch, leaving your actual
    local version alone, using git fetch. Then you can use git log and git diff
    to see what changes were made. Later, you can merge. Here's one situation
    example from cbuckley: "If I am about to go without Internet
    access for a while, for example to work on a plane, I can update my local
    copy before I leave. I can do this even if I'm not ready to merge those
    changes into my own branches yet.  Then if I want, I can perform the merge
    while offline, or I need to know what the remote version is at some point,
    I have an easy way to access it."
    (https://github.com/cbuckey-uda/reflections/blob/master/
    lesson_3_reflections.txt)

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Fill in your answer here

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
